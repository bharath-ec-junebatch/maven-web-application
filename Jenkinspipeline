node{
    def MavenHome = tool name: "maven3.8.6"
    echo "Jenkins url is: ${env.JENKINS_URL}"
    echo "Node Name is: ${env.NODE_NAME}"
    echo "Job name is: ${env.JOB_NAME}"
    
   properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
    
    try{
    slackNotifications('STARTED')
    
    stage('checkoutcode'){
        git branch: 'devlopment', credentialsId: '49ff1f14-2754-4914-b25e-5b7e9ada9f63', url: 'https://github.com/nms-ec-julybatch/maven-web-application.git'
    }
    stage('Build'){
        sh "${MavenHome}/bin/mvn clean package"
        
    }
    
    stage('ExecutethesonarqubeReport'){
        sh "${MavenHome}/bin/mvn clean sonar:sonar"
    }
    stage('UploadtheArtifactsIntoArtifactRepo'){
        sh "${MavenHome}/bin/mvn clean deploy"
    }
   
    stage('DeploytheapponTomcat'){
    sshagent(['f63c4208-2823-447e-a4ac-57fa9758d9be']) {
     sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war  ec2-user@172.31.45.16:/opt/apache-tomcat-9.0.65/webapps/"

    }
        
    }
    
    
    }//try block closing
    
    catch (e){
	slackNotifications(currentBuild.result)
	throw e
}	
finally{
slackNotifications(currentBuild.result)
}
}//Node Closing


//code snippet for sending slack notifications.

def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}

