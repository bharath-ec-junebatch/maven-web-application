node{
    
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
    def mavenHome = tool name : "maven3.8.6"
    echo "Jenkins url is: ${env.JENKINS_URL}"
    echo "Node Name is: ${env.NODE_NAME}"
    echo "Job Name is: ${env.JOB_NAME}"
    
    try{
    
    slackNotifications('STARTED')
    stage('CheckoutCode'){
        git branch: 'development', credentialsId: 'b432721f-3113-42b5-9dd4-cecc20eb7bd4', url: 'https://github.com/nms-ec-julybatch/maven-web-application.git'
    }
    
    stage('Build'){
        
       sh  "${mavenHome}/bin/mvn clean package"
    }
    /*
    stage('Execute The SonarQube Report'){
        
        sh "${mavenHome}/bin/mvn clean sonar:sonar"
    }
    
    stage('Upload Artifactory Into Artifactory Repo'){
        
        sh "${mavenHome}/bin/mvn clean deploy"
    }
    
    stage('Deploy App Into Tomcat Server'){
        
        sshagent(['95b8269b-2172-487a-a705-a7c7f6d32ae4']) {
     
         sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war  ec2-user@172.31.15.108:/opt/apache-tomcat-9.0.69/webapps/"
    
}
        
    } 
    */
    }//try block closing
    catch (e){
    slackNotifications('FAILED')
    throw e 
    }
    finally{
    slackNotifications(currentBuild.result)
    }
}//Node Closing



//Code Snippet for sending slack notifications.

def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}


